<?php

/**
 * @file
 * Handles relations for Ting entities.
 */

// Load Field module hooks.
module_load_include('field.inc', 'ting_relation');

/**
 * Implements hook_theme().
 */
function ting_relation_theme() {
  return array(
    'ting_relation' => array(
      'template' => 'ting_relation',
      'render element' => 'elements',
      'file' => 'ting_relation.theme.inc',
    ),
  );
}

/**
 * kind of a hook - called from ting.module
 */
function ting_relation_anchor_info() {
  $relations = ting_relation_inline();
  // We need to know what kind of hasOnlineAccess
  // is provided with this object and return relevant anchor information.
  $object = menu_get_object('ting_object', 2);
  if ($object->getAc_source() != 'Ebrary') {
    unset($relations['dbcaddi:hasOnlineAccess']);
  }
  unset($relations['dbcaddi:isReviewOf']);
  return $relations;
}

/**
 * Inline relation types and their titles.
 */
function ting_relation_inline() {
  static $types;
  if (!$types) {
    $types = array(
      'dbcaddi:hasCreatorDescription' => t('Author portrait'),
      'dbcaddi:hasReview' => t('Review'),
      'dbcaddi:hasSubjectDescription' => t('Subject description'),
      'isPartOfManifestation' => t('Is part of'),
      'dbcaddi:isReviewOf' => t('Is review of'),
      'dbcaddi:hasOnlineAccess' => t('Article from Ebrary'),
    );
  }
  return $types;
}

/**
 * Implements hook_form_FORM_ID_alter()
 * Adding ebrary url form field to Ting configurating form
 * Set required to FALSE - this is a part of the relation-module, and not everybody wants or has access to ebrary
 * TODO this field requires configuration. Maybe it should be moved to a module of its own?
 * this url is restricted ;'http://site.ebrary.com/lib/metropol/docDetail.action?docID=';
 * - probably for metropol access.
 */
function ting_relation_form_ting_admin_ting_settings_alter(&$form, &$form_state) {
  $form['ting']['ting_ebrary_url'] = array(
    '#type' => 'textfield',
    '#title' => t(' URL to ebrary '),
    '#description' => t('BASE URL to site.ebrary.com e.g.http://site.ebrary.com/lib/librarytitles/docDetail.action?docID='),
    '#required' => FALSE,
    '#default_value' => variable_get('ting_ebrary_url', ''),
  );
}

/**
 * Implements hook_ding_entity_buttons().
 */
function ting_relation_ding_entity_buttons($type, $entity) {
  if ($entity instanceof TingEntity) {
    $relation = NULL;
    $markup = '';
    // Seek for a online version of related material.
    foreach ($entity->relations as $rel) {
      if ($rel->type == 'dbcaddi:hasOnlineAccess') {
        $relation = $rel;
        break;
      }
    }
    // Replace the online material link to related stuff if present.
    if ($relation) {
      $ebrary_url = variable_get('ting_ebrary_url');

      $url = '';
      $use_absolute = FALSE;
      if (strstr($relation->uri, '[URL]http')) {
        $url = str_replace('[URL]', '', htmlspecialchars_decode($relation->uri));
        $use_absolute = TRUE;
      }
      elseif (strstr($relation->uri, '[URL]')) {
        $url = str_replace('[URL]', $ebrary_url, $relation->uri);
      }
      elseif (strstr($relation->uri, '[useraccessinfomedia]')) {
        if (variable_get('ting_infomedia_url')) {
          $url = ting_infomedia_get_article_link($entity->localId);
        }
      }

      $altered_url = module_invoke_all('ting_online_url_alter', $url);
      $url = $altered_url[0];

      if (!empty($url)) {
        $markup = l(t('See online'), urldecode($url), array('attributes' => array('target' => '_blank'), 'absolute' => $use_absolute));
      }
    }

    if (!$markup && $entity->online_url) {
      $altered_url = module_invoke_all('ting_online_url_alter', $entity->online_url);
      $url = $altered_url[0];
      $settings = variable_get('ting_url_labels', _ting_default_url_labels());
      $type = drupal_strtolower($entity->type);
      $label = !empty($settings[$type]) ? $settings[$type] : $settings['_default'];
      $markup = l(t($label), urldecode($url), array('attributes' => array('target' => '_new')));
    }

    return array(
      array(
        '#prefix' => '<p class="ding-entity-button">',
        '#suffix' => '</p>',
        '#type' => 'markup',
        '#markup' => $markup,
      ),
    );
  }
}
